package chen.study.day12网络编程.网络通信概述;
/*
    软件结构：C/S结构：Client/Sever指客服端/服务器结构:QQ,网盘，迅雷
             B/S结构：Browser/Sever浏览器/服务器结构：谷歌，IE、火狐

    TCP/IP协议：传输控制协议/因特网互联协议，它定义了计算机如何连入因特网，以及数据如何在他们之间传输的标准
               并采用了四层的分层模式：
               应用层          HTTP FTP TFTP SMTP SNMP DNS （主要负责应用程序的协议，例如HTTP协议，FTP协议）
               -------------------------------------------
               传输层          TCP  UDP               （主要使网络程序进行通信，在进行网络通信时，可采用TCP协议或者UDP协议）
               -------------------------------------------
               网络层          ICMP IGMP IP ARP RARP  （网络层是整个TCP/IP协议的核心，用于将传输的数据分组，将分组数据发送到目标计算机或网络）
               -------------------------------------------
               数据链路层       由底层网络定义的协议      （定义物理传输通道，通常是对某些网络驱动设备的协议，例如针对光纤，网线的驱动）
               物理层

    java.net包中提供了两种常见的网络协议的支持
（1）   UDP协议：用户数据报协议，UDP是无连接通信协议，即在数据传输时，数据的发送端和接收端不建立逻辑连接，简单来说当一台计算机向
    另外一台计算机发送数据时，发送端不会确认接收端是否存在，就会发出数据，同样接收端在接收到数据时也不会向发送端反馈是否收到数据
         由于使用UDP协议消耗资源小,通信效率高,所以通常都会用于音频,视频和普通数据传输例如:视频会议,因为这种情况下就算偶尔丢失几个数据包
     也不会对结果产生太大影响
          因为UDP协议的面向无连接性，不能保证数据完整，所以重要数据不采用UDP协议

         特点：数据被限制在64kb以内，超出这个范围则无法发送

         UDP（用户数据报）协议和TCP（传输控制）协议的区别：
                    UDP效率高不安全，TCP协议效率没有UDP高但是安全

（2）   TCP协议：传输控制协议，TCP协议是面向连接的通信协议，即传输数据之前，在发送端和接收端建立逻辑连接，然后再传输数据，它提供了两
    台计算机之间可靠无差错的数据传输。
        在TCP连接中必须明确服务器端和客户端,由客户端向服务器端发送连接请求,每次连接的时候都需要经历"三次握手"

            三次握手:
                    第一次握手:客户端向服务器端发送连接请求,等待服务器确认
                    第二次握手:服务器端向客户端回送一个响应,表示已经接收到了请求
                    第三次握手:客户端再次向服务器端发送确认信息,确认连接
            完成三次握手,连接建立后,客户端和服务器就可以进行数据传输了,由于这种面向连接的特性,TCP协议可以保证数据传输的安全，所以
            应用十分广泛：下载文件，浏览网页等。

 */
public class Demo01TCPIP {
}
