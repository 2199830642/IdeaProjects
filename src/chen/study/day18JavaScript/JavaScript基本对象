javascript基本对象：
            0.Function对象：函数对象
                                1.创建
                                    1.var fun = new Function(形式参数列表，方法体);//忘掉 没用
                                    2.function 方法名称(形式参数列表){
                                            方法体;
                                    }
                                    3.var 方法名 = function(形参列表){方法体};

                               2.方法
                               3.属性
                                    length:形参的个数
                               4.特点
                                    1.形参的类型不用写,返回值类型也可以不用写
                                    2.方法是一个对象，如果定义名称相同的方法，那么后者会把前者覆盖
                                    3.在js中，方法的调用只与方法的名称有关，和参数列表无关
                                    4.在方法声明中，有一个隐藏的内置对象（数组）：arguments，封装所有的实际参数
                               5.调用
                                    方法名称(实际参数列表);

            1.Array：数组对象
                            1.创建
                                1.var arr = new Array(元素列表);
                                2.var arr = new Array(数组默认长度);
                                3.var arr = [元素列表];

                            2.方法
                                join(参数):将数组中的元素按照指定的分隔符拼接为字符串
                                push:向数组的尾部添加一个元素
                            3.属性
                                length:数组的长度
                            4.特点
                                1.JS中，数组元素的类型是可变的
                                2.JS中，数组的长度是可变的

            2.Boolean
            3.Date:日期对象
                            1.创建
                                var date = new Date();
                            2.方法
                                toLocalString():返回当前date对象对应的时间本地字符串格式
                                getTime:获取毫秒值，返回当前日期对象描述的时间和1970年1月1日零点的毫秒值差

            4.Math：数学对象
                            1.创建
                                特点：该对象不用创建，直接使用，Math.方法名
                            2.方法
                                random():返回0-1之间的随机数，包含0，不包含1
                                ceil(x):对一个数进行向上取整
                                floor(x):对一个数向下取值
                                round(x):四舍五入

            5.Number
            6.String
            7.RegExp:正则表达式对象
                        1.正则表达式：定义字符串的组成规则的式子
                            1.单个字符：[]
                                如：[a],[ab],[a-zA-Z0-9_]
                                特殊符号代表特殊含义的单个字符：
                                    \d 单个数字字符[0-9]
                                    \w 单个单词字符[a-zA-Z0-9_]
                            2.量词符号
                                *   表示出现零次或多次  如：\w*
                                ？  表示出现零次或一次
                                +   表示出现一次或多次
                                {m,n} 表示数量>=m 且<=n  如：\w{6,12} 由单个字符构成长度为6-12
                                    m如果缺省：{,n} 表示最多n次
                                    n如果缺省：{m,} 表示最少m次
                            3.开始结束符号
                                ^:开始
                                $:结束

                        2.正则对象
                            1.创建
                                1.var reg = new RegExp("正则表达式")
                                2.var reg = /正则表达式/

                            2.方法
                                test(参数)：验证指定字符串是否满足正则定义的规范

            6.Global:
                        1.特点：全局对象，意思是这个Global中封装的方法不需要对象就可以直接调用。直接写 方法名();

                        2.方法：
                            encodeURI():url编码
                            decodeURI():url解码

                            encodeURIComponent():url编码，编码的字符比上面的字符多
                            decodeURIComponent():url解码

                            parseInt():将字符串转为数字
                                逐一判断每一个字符是否是数字，直到不是数字为止，将前边数字部分转为number

                            isNaN():判断一个值是否为NaN 因为任何值(包括NaN)和NaN比较都返回false，所以需要这个

                            eval():计算JavaScript字符串，并将它作为脚本代码来执行

                        3.url编码
                            比如： 是小陈->如果是GBK编码格式就是6个字节
                                        如果是utf-8就是9个字节
                                        一个字节是8个二进制位