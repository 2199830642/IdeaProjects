
    JSP
        1.概念：Java Server Pages：Java服务器端页面
                可以理解为一个特殊的页面，其中既可以直接定义HTML标签，又可以定义java代码
                用于简化书写的

        2.原理：
                JSP本质上就是一个Servlet

        3.JSP脚本：定义java代码的方式
            1.<% 代码 %>:定义的java代码在service方法中，service方法中可以定义什么，该脚本中就可以定义什么
            2.<%! 代码 %>:定义的java代码在JSP转化后的类的成员位置，可以定义成员变量，成员方法，静态代码块等
            3.<%= 代码 %>:定义的java代码会输出到页面上，输出语句中可以定义什么，该脚本中就可以定义什么

        4.JSP的内置对象：
            在JSP页面中不需要获取和创建，可以直接使用的对象
            jsp一共有九个内置对象
            今天学习三个：
                request：
                response：
                out：字符输出流对象 可以将数据输出到页面上，和response.getWriter()
                        response.getWriter()和out.write()的区别
                            在tomcat服务器真正给客户端做出响应之前，会先找response缓冲区的数据，再找out缓冲区数据
                            response.getWriter()数据输出永远在out.write()之前

        5.指令
            1.作用：用于配置JSP页面，导入资源文件
            2.格式：
                <% 指令名称 属性名1=属性值1 属性名2=属性值2 %>
            3.分类：
                1.page:用于配置JSP页面
                    contentType:等同于response.setContentPage()
                        1.设置响应体的mime类型以及字符集
                        2.设置当前JSP页面的编码(只能是高级的IDE才可以生效，则需要设置pageEncoding属性设置当前页面的字符集，例如pageEncoding="GBK")
                    import:用来导包
                    errorPage:当前页面发生异常后，会自动跳转到指定的错误页面
                    isErrorPage:标识当前页面是否是错误页面
                        true:可以使用一个内置对象exception
                        false:不可以使用exception

                2.include:页面包含的.导入页面的资源文件
                    <%include file="top.jsp"%>

                3.taglib:导入资源
                    <%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
                        prefix:前缀，自定义的


        6.注释
            1.html注释:
                <!-- -->:只能注释html代码片段
            2.jsp特有:推荐使用
                <%-- --%>:可以注释所有

        7.内置对象
            在jsp页面中不需要创建，可以直接使用的对象
            一共有九个：
                pageContext: 范围：当前页面共享数据，还可以获取其他八个内置对象
                request:          一次请求访问的多个资源
                Session:          一次会话的多个请求间
                application:      多个用户间共享数据
                response:           响应对象
                page:               当前页面(Servlet)的对象 this
                out:                输出对象,数据输出到页面上
                config:             Servlet的配置对象
                exception:          异常对象