
    Filter:过滤器
        1.概念
            当我们访问服务器的资源时，过滤器可以将请求拦截，然后可以完成一些特殊的功能
            过滤器的作用：
                一般用于完成通用操作：如登录验证、统一编码处理、敏感字符过滤。。。

        2.快速入门
            1.步骤：
                1.定义一个类，实现接口Filter
                2.复写方法
                3.配置拦截路径
                    1.web.xml配置
                    2.注解的配置
                        @WebFilter("/*")//访问所有资源之前都会执行该过滤器

        3.过滤器细节：
            1.web.xml配置
                <filter>
                    <filter-name>demo01</filter-name>
                    <filter-class>chen.study.web.filter.filterDemo01</filter-class>
                </filter>
                <filter-mapping>
                    <filter-name>demo01</filter-name>
                    <url-pattern>/*</url-pattern>  代表拦截路径 /*代表拦截所有
                </filter-mapping>

            2.过滤器执行流程
                见filterDemo02

            3.过滤器生命周期方法
                见filterDemo03

            4.过滤器配置详解
                1.拦截路径配置
                    1.具体资源路径：/index.jsp  只有访问index.jsp资源时，过滤器才会被执行
                    2.目录拦截：/usr/*  访问/usr下的所有资源，过滤器都会被执行
                    3.后缀名拦截：*.jsp 访问所有jsp资源时，过滤器都会被执行
                    4.拦截所有资源 /*  访问所有资源，过滤器都会被执行

                2.拦截方式配置：资源被访问的方式
                    1.注解配置：
                        设置DispatcherTypes属性
                            1.REQUEST:默认值。浏览器直接请求资源
                            2.FORWARD:转发访问资源
                            3.INCLUDE:包含访问资源
                            4.ERROR:错误跳转资源
                            5.ASYNC:异步访问资源
                    2.web.xml配置
                        只需要在<filter-mapping>标签中配置一个<dispatcher>标签即可，取值还是上面五个

            5.过滤器链（配置多个过滤器）
                执行顺序：如果有两个过滤器，过滤器1和过滤器2
                    1.过滤器1先执行
                    2.过滤器2执行
                    3.资源执行
                    4.过滤器2
                    5.过滤器1

                过滤器的先后顺序问题：
                    1.注解配置的过滤器：按类名的字符串比较规则比较，谁小谁先执行
                        如：AFilter和BFilter，A先执行

                    2.web.xml配置的：谁定义在上面，谁先执行